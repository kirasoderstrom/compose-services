version: '3'
services:
  postgres:
    # image: postgres:9.6
    build:
      context: postgres
    networks:
      - devnet
    volumes:
      - "psqldata:/var/lib/postgresql/data"
      - "./scripts/postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql"
      - ./postgres/postgres.conf:/etc/postgresql.conf
      - ./postgres/pg_hba.conf:/etc/pg_hba.conf
    restart: unless-stopped
    healthcheck:
        test: ["CMD-SHELL", "psql -U fence_user -d fence_db -c 'SELECT 1;'"]
        interval: 60s
        timeout: 5s
        retries: 3
    command: postgres -c config_file=/etc/postgresql.conf -c hba_file=/etc/pg_hba.conf
    #
    # uncomment this to make postgres available from the container host - ex:
    #    psql -h localhost -d fence -U fence_user
    ports:
     - 5432:5432
  indexd-service:
    image: "quay.io/cdis/indexd:master"
    command: bash indexd_setup.sh
    container_name: indexd-service
    networks:
      - devnet
    volumes:
      - ./Secrets/indexd_settings.py:/var/www/indexd/local_settings.py
      - ./Secrets/indexd_creds.json:/var/www/indexd/creds.json
      - ./Secrets/config_helper.py:/var/www/indexd/config_helper.py
      - ./scripts/indexd_setup.sh:/var/www/indexd/indexd_setup.sh
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/_status"]
      interval: 60s
      timeout: 5s
      retries: 3
    depends_on:
      - postgres
    environment:
      - GEN3_DEBUG=True
  fence-service:
    image: "ohsucompbio/fence:s3-endpoint"
    command: bash /var/www/fence/fence_setup.sh
    container_name: fence-service
    networks:
      - devnet
    volumes:
      - ./Secrets/fence-config.yaml:/var/www/fence/fence-config.yaml
      - ./Secrets/user.yaml:/var/www/fence/user.yaml
      - ./Secrets/TLS/service.crt:/usr/local/share/ca-certificates/cdis-ca.crt
      - ./Secrets/fenceJwtKeys:/fence/keys
      - ./scripts/fence_setup.sh:/var/www/fence/fence_setup.sh
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/_status"]
      interval: 60s
      timeout: 5s
      retries: 3
    environment:
      - PYTHONPATH=/var/www/fence
    depends_on:
      - postgres
  arborist-service:
    image: "quay.io/cdis/arborist:master"
    container_name: arborist-service
    networks:
      - devnet
    environment:
      - JWKS_ENDPOINT=http://fence-service/.well-known/jwks
    depends_on:
      - fence-service
  peregrine-service:
    image: "quay.io/cdis/peregrine:master"
    container_name: peregrine-service
    networks:
      - devnet
    volumes:
      - ./Secrets/peregrine_settings.py:/var/www/peregrine/wsgi.py
      - ./Secrets/peregrine_creds.json:/var/www/peregrine/creds.json
      - ./Secrets/config_helper.py:/var/www/peregrine/config_helper.py
      - ./Secrets/TLS/service.crt:/usr/local/share/ca-certificates/cdis-ca.crt
      - ./scripts/peregrine_setup.sh:/peregrine_setup.sh
      - ./example-schemas:/schemas_dir
    environment: &env
      # DICTIONARY_URL: https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json
      # http://s3.amazonaws.com/dictionary-artifacts/kf-dictionary/1.0.4/schema.json
      #
      # https://s3.amazonaws.com/dictionary-artifacts/bhcdictionary/feat/s3/schema.json
      # http://s3.amazonaws.com/dictionary-artifacts/kf-dictionary/1.0.4/schema.json
      # https://s3.amazonaws.com/dictionary-artifacts/envdictionary/1.0.2/schema.json
      # https://s3.amazonaws.com/dictionary-artifacts/vadictionary/0.3.0/schema.json
      PATH_TO_SCHEMA_DIR: /schemas_dir
      REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/_status"]
      interval: 60s
      timeout: 5s
      # give peregrine some extra time to startup
      retries: 10
    depends_on:
      - postgres
      - sheepdog-service
  sheepdog-service:
    image: "ohsucompbio/fence:cross-project-graphs"  # "quay.io/cdis/sheepdog:master"
    command: bash /sheepdog_setup.sh
    container_name: sheepdog-service
    networks:
      - devnet
    volumes:
      - ./Secrets/sheepdog_settings.py:/var/www/sheepdog/wsgi.py
      - ./Secrets/sheepdog_creds.json:/var/www/sheepdog/creds.json
      - ./Secrets/config_helper.py:/var/www/sheepdog/config_helper.py
      - ./scripts/sheepdog_setup.sh:/sheepdog_setup.sh
      - ./example-schemas:/schemas_dir
    environment: *env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/_status"]
      interval: 60s
      timeout: 5s
      retries: 5
    depends_on:
      - postgres
  pidgin-service:
    image: "quay.io/cdis/pidgin:master"
    container_name: pidgin-service
    networks:
      - devnet
    volumes:
      - ./scripts/waitForContainers.sh:/var/www/data-portal/waitForContainers.sh
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/_status"]
      interval: 60s
      timeout: 5s
      retries: 3
    depends_on:
      - peregrine-service
  portal-service:
    image: "quay.io/cdis/data-portal:latest"
    # build:
    #   context: data-portal
    container_name: portal-service
    command: ["bash", "/var/www/data-portal/waitForContainers.sh"]
    networks:
      - devnet
    volumes:
      - ./scripts/waitForContainers.sh:/var/www/data-portal/waitForContainers.sh
      - ./Secrets/portal_config.json:/data-portal/data/config/default.json
    environment:
      # this seems to be overridden within the container
      - NODE_ENV=dev
      # - MOCK_STORE=true
      - APP=dev
      - GDC_SUBPATH=http://revproxy-service/api/v0/submission/
      # ohsu change to container to bring up portal in dev mode
      - WEBPACK_WATCH=true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost"]
      interval: 60s
      timeout: 5s
      retries: 3
    depends_on:
      - postgres
      - peregrine-service
      - sheepdog-service
  # jupyter-service:
  #   image: "quay.io/occ_data/jupyternotebook:1.7.2"
  #   #image: jupyter/minimal-notebook
  #   container_name: jupyter-service
  #   networks:
  #     - devnet
  #   volumes:
  #     - ./scripts/jupyter_config.py:/home/jovyan/.jupyter/jupyter_notebook_config.py
  revproxy-service:
    image: "quay.io/cdis/nginx:1.15.5-ctds"
    container_name: revproxy-service
    networks:
      - devnet
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./Secrets/TLS/service.crt:/etc/nginx/ssl/nginx.crt
      - ./Secrets/TLS/service.key:/etc/nginx/ssl/nginx.key
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost"]
      interval: 60s
      timeout: 5s
      retries: 3
    depends_on:
      - indexd-service
      - peregrine-service
      - sheepdog-service
      - fence-service
      - portal-service
      - pidgin-service
#      - mock-workspace-service

  # mock-workspace-service:
  #   build:
  #     context: ./mock-workspace
  #   container_name: mock-workspace-service
  #   networks:
  #     - devnet
  #   ports:
  #     - "5000:5000"
  #   depends_on:
  #     - fence-service

  # replacement for SQS S3 Job Dispatcher https://github.com/uc-cdis/ssjdispatcher
  s3indexer-service:
    image: "ohsucompbio/gen3-s3indexer:s3-endpoint"
    container_name: s3indexer-service
    volumes:
      - ./Secrets/s3indexer-state:/var/s3indexer/state
      - ./Secrets/fence-config.yaml:/var/s3indexer/fence-config.yaml
    networks:
      - devnet
    depends_on:
      - indexd-service

networks:
  devnet:
volumes:
  psqldata:
