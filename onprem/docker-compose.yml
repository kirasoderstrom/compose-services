version: '3.4'

# use yaml's 'anchor' to define logging
# x-docker-data is an extension and when docker-compose
# parses the YAML, it will not do anything with it

x-docker-data: &logging
  logging:
    options:
      max-size: 10m
      max-file: "5"

x-docker-data: &gelf-logging
  logging:
    driver: gelf
    options:
      # Use udp://host.docker.internal:12201 when you are using Docker Desktop for Mac
      # docs: https://docs.docker.com/docker-for-mac/networking/#i-want-to-connect-from-a-container-to-a-service-on-the-host
      # issue: https://github.com/lvthillo/docker-elk/issues/1
      gelf-address: "udp://localhost:12201"




services:

  # replacement for SQS S3 Job Dispatcher https://github.com/uc-cdis/ssjdispatcher
  s3indexer-service:
    image: "onprem/s3indexer"
    container_name: s3indexer-service
    volumes:
      - ./compose-services/Secrets/s3indexer-state:/var/s3indexer/state  # store re-try info
      - ./compose-services/Secrets/fence-config.yaml:/var/s3indexer/fence-config.yaml  # pass bucket info to s3clientindexer
      - ./compose-services/Secrets/indexd_creds.json:/var/s3indexer/indexd_creds.json  # read new files from indexd db
    # networks:
    #   - devnet
    depends_on:
      - indexd-service
    <<: *gelf-logging  # include logging

  # replacement for hatchery Job Dispatcher https://github.com/uc-cdis/hatchery
  hatchery-service:
    image: "onprem/hatchery"
    container_name: hatchery-service
    volumes:
      - ./compose-services/onprem/hatchery-lite:/app
    # networks:
    #   - devnet
    # <<: *logging  # include logging

  # jwt simplifier /gen3-authz
  voucher-service:
    build:
        context: compose-services/onprem/voucher
    container_name: voucher-service
    # networks:
    #   - devnet
    volumes:
      - ./compose-services/onprem/voucher:/app
      # use long form due to colon in source
      - type: bind
        source: ./compose-services/Secrets/fenceJwtKeys/2020-02-05T19:12:09Z/jwt_private_key.pem
        target: /fence/keys/jwt_private_key.pem
      - type: bind
        source: ./compose-services/Secrets/fenceJwtKeys/2020-02-05T19:12:09Z/jwt_public_key.pem
        target: /fence/keys/jwt_public_key.pem
    ports:
      - 5000:5000
    depends_on:
      - fence-service
      - arborist-service
    # <<: *logging  # include logging

  # see https://itnext.io/deploy-elk-stack-in-docker-to-monitor-containers-c647d7e2bfcd
  logstash-service:
    #image: docker.elastic.co/logstash/logstash-oss:6.8.1
    image: onprem/logstash
    container_name: logstash-service
    depends_on:
      - esproxy-service
    ports:
      - 12201:12201/udp
    volumes:
      - ./compose-services/Secrets/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    # networks:
    #   - devnet


  bmeg-dash:
    image: onprem/bmeg-dash
    container_name: bmeg-dash
    volumes:
      - ./compose-services/Secrets/bmeg_credentials.json:/app/bmeg_app/secrets/bmeg_credentials.json
      - /mnt/data2/bmeg_app/data:/app/bmeg_app/data
    ports:
      - 8050:8050
    expose:
      - "8050"
    env_file:
     - ./compose-services/Secrets/.env      
    environment:
      # - ELASTICSEARCH_URL= << set in .env
      - BMEG_STAGE=PROD
    command: ["./bin/wait-for-it.sh", "esproxy-service:9200", "--", "./bin/setup-and-launch.sh"]
    depends_on:
      - esproxy-service    


  # ---------
  # overrides
  # ---------
  # over ride fence to use our fork which supports non aws url signing
  fence-service:
    image: "onprem/fence"
  #   # <<: *logging  # include logging

  # # include logging
  # arborist-service:
  #   <<: *logging
  # # composeservices_postgres_1:
  # #   <<: *logging

  esproxy-service:
    <<: *logging
  kibana-service:
    <<: *logging

  # guppy-service:
  #   <<: *logging
  # indexd-service:
  #   <<: *logging
  # jupyter-service:
  #   <<: *logging
  # peregrine-service:
  #   <<: *logging
  # pidgin-service:
  #   <<: *logging
  # # portal-service:
  # #   <<: *logging
  # # revproxy-service:
  # #   <<: *logging
  # sheepdog-service:
  #   <<: *logging
  # spark-service:
  #   <<: *logging
  # tube-service:
  #   <<: *logging
